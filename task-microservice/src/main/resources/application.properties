server.port=8082

# application id - required for find instance of server(eureka server)
spring.application.name=task-microservice


# url address where registration will take place

spring.kafka.properties.bootstrap.servers = ${BOOTSTRAP_SERVERS:localhost:9092}


spring.kafka.consumer.bootstrap-servers= ${BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id= task-producer
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= ru.tinkoff.summer.taskshareddomain.TotalExecutionResultMapper
spring.kafka.consumer.properties.spring.json.trusted.packages=*


spring.kafka.producer.bootstrap-servers= ${BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=  org.springframework.kafka.support.serializer.JsonSerializer

spring.datasource.url=jdbc:postgresql://${POSTGRES_URL:localhost:5432/postgres}
spring.datasource.username=${POSTGRES_USERNAME:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:password}
spring.jpa.hibernate.ddl-auto=none
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=false

spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db.changelog/db.changelog-master.xml
spring.liquibase.url=jdbc:postgresql://${POSTGRES_URL:localhost:5432/postgres}
spring.liquibase.user=${POSTGRES_USERNAME:postgres}
spring.liquibase.password=${POSTGRES_PASSWORD:password}
